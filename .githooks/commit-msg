#!/bin/sh
#
# Commit message hook
# Validates commit message follows conventional commits format
#

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Color codes
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Conventional commits regex
# Matches: type(scope): description
# Where type is: feat, fix, docs, style, refactor, test, chore, perf
CONVENTIONAL_REGEX="^(feat|fix|docs|style|refactor|test|chore|perf)(\(.+\))?: .{1,}"

# Check if commit message matches pattern
if ! echo "$COMMIT_MSG" | grep -qE "$CONVENTIONAL_REGEX"; then
  echo "${RED}Error: Commit message doesn't follow Conventional Commits format${NC}"
  echo ""
  echo "Format: type(scope): description"
  echo ""
  echo "Valid types:"
  echo "  feat:     New feature"
  echo "  fix:      Bug fix"
  echo "  docs:     Documentation changes"
  echo "  style:    Code style changes (formatting, etc.)"
  echo "  refactor: Code refactoring"
  echo "  test:     Test changes"
  echo "  chore:    Build process or tooling changes"
  echo "  perf:     Performance improvements"
  echo ""
  echo "Examples:"
  echo "  feat: add external link validation"
  echo "  fix(parser): handle missing frontmatter"
  echo "  docs: update README with examples"
  echo ""
  echo "Your message:"
  echo "  $COMMIT_MSG"
  echo ""
  echo "To skip this hook:"
  echo "  git commit --no-verify"
  echo ""
  exit 1
fi

exit 0
